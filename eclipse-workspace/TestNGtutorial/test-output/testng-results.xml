<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="13" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-03T12:19:50 IST" name="Suite" finished-at="2021-06-03T12:19:50 IST" duration-ms="105">
    <groups>
      <group name="Smoke">
        <method signature="Day1.Demo()[pri:0, instance:test.Day1@2f465398]" name="Demo" class="test.Day1"/>
        <method signature="Day2.something()[pri:0, instance:test.Day2@6a2b953e]" name="something" class="test.Day2"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2021-06-03T12:19:50 IST" name="Personal loan" finished-at="2021-06-03T12:19:50 IST" duration-ms="79">
      <class name="test.Day1">
        <test-method signature="Demo()[pri:0, instance:test.Day1@2f465398]" started-at="2021-06-03T12:19:50 IST" name="Demo" finished-at="2021-06-03T12:19:50 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method signature="Secondtest()[pri:0, instance:test.Day1@2f465398]" started-at="2021-06-03T12:19:50 IST" name="Secondtest" finished-at="2021-06-03T12:19:50 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Secondtest -->
        <test-method is-config="true" signature="Lastexecution()[pri:0, instance:test.Day1@2f465398]" started-at="2021-06-03T12:19:50 IST" name="Lastexecution" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Lastexecution -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="prerequest()[pri:0, instance:test.Day2@6a2b953e]" started-at="2021-06-03T12:19:50 IST" name="prerequest" finished-at="2021-06-03T12:19:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequest -->
        <test-method signature="something()[pri:0, instance:test.Day2@6a2b953e]" started-at="2021-06-03T12:19:50 IST" name="something" finished-at="2021-06-03T12:19:50 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- something -->
      </class> <!-- test.Day2 -->
      <class name="test.Day4">
        <test-method signature="LoginAPIhomeloan()[pri:0, instance:test.Day4@548e6d58]" started-at="2021-06-03T12:19:50 IST" name="LoginAPIhomeloan" finished-at="2021-06-03T12:19:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIhomeloan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Personal loan -->
    <test started-at="2021-06-03T12:19:50 IST" name="Car loan" finished-at="2021-06-03T12:19:50 IST" duration-ms="105">
      <class name="test.Day1">
        <test-method is-config="true" signature="aftersuite()[pri:0, instance:test.Day1@2f465398]" started-at="2021-06-03T12:19:50 IST" name="aftersuite" finished-at="2021-06-03T12:19:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- test.Day1 -->
      <class name="test.Day3">
        <test-method is-config="true" signature="Beforesuit()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="Beforesuit" finished-at="2021-06-03T12:19:50 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforesuit -->
        <test-method is-config="true" signature="beforecls()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="beforecls" finished-at="2021-06-03T12:19:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforecls -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="beforeevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="Mobilesignincarloan()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="Mobilesignincarloan" finished-at="2021-06-03T12:19:50 IST" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day3.Mobilesignincarloan(Day3.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignincarloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="afterevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="beforeevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="Mobilesignoutcarloan(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="Mobilesignoutcarloan" data-provider="getData" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignoutcarloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="afterevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="beforeevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="Mobilesignoutcarloan(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="Mobilesignoutcarloan" data-provider="getData" finished-at="2021-06-03T12:19:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignoutcarloan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="beforeevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="afterevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="Mobilesignoutcarloan(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="Mobilesignoutcarloan" data-provider="getData" finished-at="2021-06-03T12:19:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignoutcarloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="afterevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="beforeevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="Weblogincarloan(java.lang.String, java.lang.String)[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="Weblogincarloan" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Weblogincarloan -->
        <test-method is-config="true" signature="aftercls()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="aftercls" finished-at="2021-06-03T12:19:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftercls -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@3541cb24]" started-at="2021-06-03T12:19:50 IST" name="afterevery" finished-at="2021-06-03T12:19:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
      </class> <!-- test.Day3 -->
    </test> <!-- Car loan -->
  </suite> <!-- Suite -->
</testng-results>
